// Claro! Aqui est√° **toda a explica√ß√£o sobre eventos do mouse (Mouse events)** traduzida e adaptada cuidadosamente para o portugu√™s:

// ---

// ## üñ± Eventos do Mouse

// Neste cap√≠tulo, vamos explorar com mais detalhes os **eventos do mouse** e suas propriedades.

// > üí° **Observa√ß√£o:** esses eventos n√£o v√™m apenas de ‚Äúdispositivos com mouse‚Äù, mas tamb√©m s√£o **simulados** em celulares e tablets para compatibilidade.

// ---

// ## üìö Tipos de eventos do mouse

// J√° vimos alguns deles:

// * **mousedown / mouseup** ‚Äì o bot√£o do mouse √© pressionado/solto sobre um elemento.
// * **mouseover / mouseout** ‚Äì o ponteiro do mouse entra ou sai de um elemento.
// * **mousemove** ‚Äì cada movimento do mouse sobre um elemento dispara esse evento.
// * **click** ‚Äì ocorre ap√≥s `mousedown` e `mouseup` no **mesmo elemento**, com o **bot√£o esquerdo**.
// * **dblclick** ‚Äì ocorre ap√≥s dois cliques r√°pidos no mesmo elemento. √â pouco usado atualmente.
// * **contextmenu** ‚Äì ocorre ao clicar com o **bot√£o direito**. Tamb√©m pode ser ativado por teclado (tecla do menu), ent√£o n√£o √© exclusivamente ‚Äúdo mouse‚Äù.

// H√° outros eventos relacionados ao mouse que veremos mais adiante.

// ---

// ## üîÅ Ordem dos eventos

// Uma √∫nica a√ß√£o do usu√°rio pode disparar **v√°rios eventos**.

// Exemplo: um clique com o bot√£o esquerdo dispara:

// ```
// mousedown ‚Üí mouseup ‚Üí click
// ```

// Se voc√™ clicar num bot√£o, ver√° os eventos nessa ordem. Em cliques duplos (`dblclick`), isso se repete rapidamente.

// ---

// ## üß∑ Propriedade `event.button` (qual bot√£o foi clicado?)

// Eventos como `mousedown` e `mouseup` t√™m a propriedade `event.button` que identifica **qual bot√£o do mouse** foi usado:

// | Bot√£o do Mouse         | `event.button` |
// | ---------------------- | -------------- |
// | Bot√£o esquerdo         | 0              |
// | Bot√£o do meio (scroll) | 1              |
// | Bot√£o direito          | 2              |
// | Bot√£o ‚Äúvoltar‚Äù (X1)    | 3              |
// | Bot√£o ‚Äúavan√ßar‚Äù (X2)   | 4              |

// > A maioria dos dispositivos s√≥ tem os bot√µes **0 (esquerdo)** e **2 (direito)**.

// H√° tamb√©m `event.buttons` (com "s") que indica **quais bot√µes est√£o pressionados ao mesmo tempo**, mas raramente √© usado.

// ---

// ## ‚ö†Ô∏è `event.which` (obsoleto)

// C√≥digo antigo pode usar `event.which`:

// ```js
// event.which == 1 // bot√£o esquerdo
// event.which == 2 // bot√£o do meio
// event.which == 3 // bot√£o direito
// ```

// ‚ùå Essa propriedade est√° **obsoleta**. Use `event.button`.

// ---

// ## üîë Teclas modificadoras: `shift`, `alt`, `ctrl`, `meta`

// Todos os eventos do mouse incluem informa√ß√µes sobre **teclas pressionadas** durante o evento:

// | Tecla           | Propriedade      |
// | --------------- | ---------------- |
// | Shift           | `event.shiftKey` |
// | Alt (ou Option) | `event.altKey`   |
// | Ctrl            | `event.ctrlKey`  |
// | Cmd (Mac)       | `event.metaKey`  |

// ```html
// <button id="botao">Alt + Shift + Clique</button>

// <script>
//   botao.onclick = function(evento) {
//     if (evento.altKey && evento.shiftKey) {
//       alert("Parab√©ns!");
//     }
//   };
// </script>
// ```

// ---

// ### üß† Aten√ß√£o para usu√°rios de Mac

// * Em **Windows/Linux**, usamos `Ctrl`.
// * Em **Mac**, geralmente usa-se `Cmd` (representado por `metaKey`).

// Para suportar todos os usu√°rios:

// ```js
// if (event.ctrlKey || event.metaKey) {
//   // Aceita Ctrl no Windows e Cmd no Mac
// }
// ```

// > No Mac, **Ctrl+click** √© interpretado como clique com o bot√£o direito (gera `contextmenu`).

// ---

// ## üìç Coordenadas do mouse

// Eventos do mouse fornecem **duas formas de coordenadas**:

// | Tipo                   | Propriedades         | Explica√ß√£o                                  |
// | ---------------------- | -------------------- | ------------------------------------------- |
// | Relativas √† janela     | `clientX`, `clientY` | Posi√ß√£o dentro da **janela vis√≠vel**        |
// | Relativas ao documento | `pageX`, `pageY`     | Posi√ß√£o em rela√ß√£o ao **documento inteiro** |

// ```html
// <input onmousemove="this.value=event.clientX+':'+event.clientY" value="Passe o mouse aqui">
// ```

// > `clientX/Y` mudam conforme o scroll. J√° `pageX/Y` n√£o mudam.

// ---

// ## üõë Prevenir sele√ß√£o de texto no `mousedown`

// Ao dar **duplo clique**, o navegador pode **selecionar o texto** ‚Äî o que pode atrapalhar o design de alguns componentes.

// Exemplo:

// ```html
// <span ondblclick="alert('Duplo clique!')">Clique duas vezes</span>
// ```

// Tamb√©m √© poss√≠vel iniciar uma sele√ß√£o ao clicar e arrastar com o bot√£o pressionado.

// ### ‚úÖ Solu√ß√£o: impedir a√ß√£o padr√£o no `mousedown`

// ```html
// <b ondblclick="alert('Clique!')" onmousedown="return false">
//   Clique duas vezes
// </b>
// ```

// Isso evita que o texto seja selecionado no duplo clique. O conte√∫do ainda pode ser selecionado, mas s√≥ se o usu√°rio come√ßar a sele√ß√£o **fora** do elemento.

// ---

// ## üìã Impedir c√≥pia de conte√∫do com `oncopy`

// ```html
// <div oncopy="alert('C√≥pia n√£o permitida!'); return false;">
//   Usu√°rio querido,<br>
//   Copiar este conte√∫do n√£o √© permitido.
// </div>
// ```

// O usu√°rio ver√° um alerta ao tentar copiar. Embora a prote√ß√£o **n√£o seja absoluta**, pode desencorajar o usu√°rio comum.

// ---

// ## ‚úÖ Resumo

// * Eventos do mouse:

//   * `mousedown`, `mouseup`, `click`, `dblclick`, `contextmenu`, `mousemove`, etc.
// * Propriedade do bot√£o clicado:

//   * `event.button`: 0 (esquerdo), 1 (meio), 2 (direito).
// * Teclas modificadoras:

//   * `shiftKey`, `altKey`, `ctrlKey`, `metaKey` (Cmd no Mac).
//   * Use `ctrlKey || metaKey` para suportar todos os sistemas.
// * Coordenadas:

//   * `clientX/clientY` ‚Üí relativo √† **janela**.
//   * `pageX/pageY` ‚Üí relativo ao **documento**.
// * Use `onmousedown="return false"` para evitar sele√ß√£o indesejada.
// * Use `oncopy="return false"` para tentar bloquear c√≥pia de conte√∫do.

// ---

// Se quiser, posso montar um **exemplo pr√°tico com todos esses eventos funcionando juntos** para estudo ou pr√°tica. Deseja isso?
